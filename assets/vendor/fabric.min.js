// Inicialização do canvas com o Fabric.js
var canvas = new fabric.Canvas('adesivo-canvas');

// Função para carregar o adesivo SVG
document.getElementById('load-sticker').addEventListener('click', function() {
    var selectedSticker = document.getElementById('sticker-select').value;
    
    // Caminho para o arquivo SVG na pasta "stickers"
    var stickerPath = 'stickers/' + selectedSticker; // Atualizado para "stickers" minúsculo
    
    // Carregar o adesivo SVG com Fabric.js
    fabric.loadSVGFromURL(stickerPath, function(objects, options) {
        var sticker = fabric.util.groupSVGElements(objects, options);
        canvas.clear(); // Limpa o canvas antes de adicionar o novo adesivo
        canvas.add(sticker).renderAll(); // Adiciona o adesivo ao canvas
    });
});

// Atualizar cor do texto no adesivo
document.getElementById('cor').addEventListener('input', function(event) {
    var color = event.target.value;
    updateTextProperties(color);
});

// Atualizar o tamanho da fonte do texto
document.getElementById('tamanho-fonte').addEventListener('input', function(event) {
    var fontSize = parseInt(event.target.value);
    updateTextProperties(undefined, fontSize);
});

// Atualizar a fonte do texto
document.getElementById('fontPicker').addEventListener('change', function(event) {
    var font = event.target.value;
    updateTextProperties(undefined, undefined, font);
});

// Atualizar o texto do adesivo
document.getElementById('texto').addEventListener('input', function(event) {
    var text = event.target.value;
    updateTextProperties(undefined, undefined, undefined, text);
});

// Função para atualizar as propriedades do texto
function updateTextProperties(color, fontSize, fontFamily, text) {
    var sticker = canvas.item(0); // Presumindo que o adesivo esteja como o primeiro objeto no canvas
    
    if (sticker && sticker.type === 'group') {
        var textObj = sticker.getObjects().find(obj => obj.type === 'text');
        
        if (textObj) {
            // Atualiza o texto, cor, tamanho e fonte
            if (text !== undefined) {
                textObj.set({ text: text });
            }
            if (color !== undefined) {
                textObj.set({ fill: color });
            }
            if (fontSize !== undefined) {
                textObj.set({ fontSize: fontSize });
            }
            if (fontFamily !== undefined) {
                textObj.set({ fontFamily: fontFamily });
            }
            canvas.renderAll(); // Renderiza o canvas após a atualização
        }
    }
}
